#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    void merge(vector<int>& nums, int start, int end, int mid) {
    	int i, j;
    	vector<int> tmp;

    	i = start;
    	j = mid;
//    	k = 0;
    	while(i <= (mid-1) && j <= end) {
    		if (nums[i] <= nums[j]) {
    			tmp.push_back(nums[i]);
    			i++;
    		} else {
    			count += (mid-i);
    			tmp.push_back(nums[j]);
    			j++;
    		}
//    		k++;
    	}
    	while(i <= (mid-1)) {
    		tmp.push_back(nums[i]);
    	}
    	while(j <= end) {
    		tmp.push_back(nums[j]);
    	}
    	for (int i = start; i <=end; i++) {
    		nums[i] = tmp[i - start];
    	}
    }

    void mergesort(vector<int>& nums, int start, int end) {
    	if (start >= end) {
    		return;
    	}
    	int mid = start + (end-start)/2;
    	mergesort(nums, start, mid);
    	mergesort(nums, mid+1, end);
    	merge(nums, start, end, mid);
    }

    vector<int> countSmaller(vector<int>& nums) {
    	count = 0;
    	mergesort(nums, 0, nums.size() -1 );
    	cout << count << endl;
    	return nums;
    }
private:
    int count;
};

int main() {
	vector<int> input = {1, 20, 6, 4, 5};
	Solution* s = new Solution();
	s->countSmaller(input);
	for (auto i : input) {
		cout << i << " ";
	}

	return 0;
}
